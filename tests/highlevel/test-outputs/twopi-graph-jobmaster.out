7916576ad7f9a29fe458dfc70e50bf09  twopi.seamless
7916576ad7f9a29fe458dfc70e50bf09  /tmp/twopi-database.seamless
OUTGOING jobslave jobmaster
INCOMING jobmaster jobslave
ADD SERVANT buffer
ADD SERVANT buffer_info
ADD SERVANT semantic_to_syntactic
ADD SERVANT transformation
ADD SERVANT buffer
ADD SERVANT buffer_info
ADD SERVANT semantic_to_syntactic
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3afa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3afa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/accessor_update.py", line 62, in _run
    expression_result_checksum = await EvaluateExpressionTask(manager, expression).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/evaluate_expression.py", line 429, in _run
    return await _evaluate_expression(self, expression, manager, self.fingertip_mode)
  File "/seamless/seamless/core/manager/tasks/evaluate_expression.py", line 370, in _evaluate_expression
    result_buffer = await GetBufferTask(manager, result_checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc2e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc2e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6fa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6fa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9428b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9428b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953970>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953970>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942910>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942910>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9425b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9425b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6850>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6850>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953eb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953eb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953e20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953e20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6730>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6730>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6df0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6df0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b961d90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b961d90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9611c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9611c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b961580>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b961580>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6a30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6a30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccb50>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccb50>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9678e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9678e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953100>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953100>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc400>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc400>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6a90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6a90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9426d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9426d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9613a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9613a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967250>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967250>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9672e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9672e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967400>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967400>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9425b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9425b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6940>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6940>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ad90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ad90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9536a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9536a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953df0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953df0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc100>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc100>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6f70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6f70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9425e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9425e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b961340>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b961340>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b972dc0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b972dc0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Set up a communion outgoing port 8602
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b972ee0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b972ee0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967d60>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967d60>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
REMOVE SERVANT buffer
REMOVE SERVANT buffer_info
REMOVE SERVANT semantic_to_syntactic
REMOVE SERVANT transformation
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba5e790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba5e790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9427c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9427c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6880>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6880>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba2ceb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba2ceb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b953850>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b953850>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc520>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc520>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6250>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6250>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba5e700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba5e700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9674c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9674c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9728b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9728b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b972ac0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b972ac0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967370>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967370>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9422b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9422b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c66d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c66d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6940>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6940>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238d33d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238d33d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238d3220>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238d3220>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccee0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccee0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6430>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6430>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942370>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942370>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b961340>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b961340>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b972160>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b972160>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b972eb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b972eb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9727c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9727c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9674c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9674c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b961550>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b961550>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b961850>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b961850>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9427c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9427c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9423a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9423a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9429d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9429d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9671f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9671f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba5e550>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba5e550>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba5e310>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba5e310>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967820>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967820>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9678b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9678b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6100>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6100>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6520>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6520>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc0d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc0d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9423a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9423a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967280>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967280>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba5e7f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba5e7f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6760>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6760>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6970>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6970>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6cd0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6cd0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9670a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9670a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9429a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9429a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3afa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3afa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ac70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ac70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccca0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccca0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba2cf10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba2cf10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967af0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967af0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c67c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c67c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964be0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964be0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964c10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964c10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6280>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6280>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967430>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967430>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9427f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9427f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9422b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9422b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967a60>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967a60>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967a00>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967a00>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6070>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6070>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964d60>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964d60>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941fd0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941fd0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941880>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941880>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c69a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c69a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9673d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9673d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967430>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967430>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942af0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942af0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccd90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccd90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942460>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942460>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967d30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967d30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6fd0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6fd0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382bc88a30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382bc88a30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941610>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941610>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95ddc0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95ddc0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d610>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d610>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964d30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964d30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c65b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c65b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9676d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9676d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba2ceb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba2ceb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942370>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942370>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967d00>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967d00>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967760>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967760>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6370>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6370>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964640>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964640>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d970>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d970>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dc40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dc40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941760>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941760>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6fa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6fa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6d60>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6d60>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9679d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9679d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954be0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954be0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954e20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954e20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954d00>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954d00>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d4f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d4f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d5b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d5b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941d90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941d90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9679a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9679a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9646a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9646a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9671c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9671c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941400>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941400>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941460>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941460>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dfa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dfa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954640>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954640>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964490>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964490>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9540d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9540d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9543d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9543d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d1c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d1c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967c70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967c70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964e50>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964e50>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9648e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9648e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9679d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9679d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941880>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941880>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d580>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d580>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954af0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954af0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ad30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ad30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d6d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d6d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d6a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d6a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941be0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941be0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9673a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9673a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6460>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6460>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967520>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967520>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941220>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941220>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9412e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9412e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d4c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d4c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954880>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954880>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ac10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ac10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6c40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6c40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3aca0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3aca0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dfa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dfa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95ddf0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95ddf0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941c70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941c70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967a90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967a90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9423d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9423d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967250>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967250>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d190>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d190>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dd30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dd30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ab20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ab20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c66d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c66d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ab50>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ab50>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95daf0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95daf0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dcd0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dcd0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941760>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941760>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967640>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967640>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9429d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9429d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9678b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9678b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9417c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9417c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95ddc0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95ddc0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d1f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d1f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3a8b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3a8b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382bc88910>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382bc88910>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3a7c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3a7c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954e50>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954e50>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d3a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d3a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9415b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9415b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967dc0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967dc0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942550>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942550>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9418b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9418b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dee0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dee0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dfa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dfa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3ad30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3ad30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e15b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e15b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc820>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc820>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9423d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9423d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d8e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d8e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba1fe20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba1fe20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941910>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941910>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95dbb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95dbb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942970>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942970>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382bc88c70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382bc88c70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1e20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1e20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1bb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1bb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9417f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9417f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941610>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941610>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1c10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1c10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1730>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1730>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccdc0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccdc0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d730>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d730>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d8b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d8b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382bc88be0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382bc88be0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1730>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1730>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1bb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1bb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6280>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6280>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6730>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6730>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e11f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e11f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382bc88c70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382bc88c70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d400>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d400>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954bb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954bb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d0a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d0a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942730>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942730>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cccd0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cccd0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1a30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1a30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9412e0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9412e0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6250>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6250>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941310>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941310>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1f40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1f40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc400>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc400>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954fa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954fa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954ca0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954ca0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b95d4f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b95d4f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9424c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9424c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cc4c0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cc4c0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e12b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e12b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6b20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6b20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964a90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964a90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941310>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941310>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1940>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1940>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccf10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccf10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942f70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942f70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954580>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954580>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964a60>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964a60>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964d30>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964d30>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954910>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954910>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942340>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942340>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccd90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccd90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1d90>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1d90>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9c6250>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9c6250>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b941f10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b941f10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1610>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1610>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cceb0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cceb0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9420d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b954f10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b954f10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9679d0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9679d0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967c70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967c70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964460>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964460>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942f10>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942f10>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba2cf40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba2cf40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccf40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccf40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e8e20>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e8e20>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e8580>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e8580>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9672b0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9672b0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967fa0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967fa0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964550>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964550>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942f40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942f40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1310>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1310>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942160>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942160>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964580>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964580>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9677f0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9677f0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9cccd0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9cccd0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e8c70>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e8c70>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1790>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1790>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e1640>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e1640>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f38238e8b80>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f38238e8b80>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9ccf40>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9ccf40>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b967310>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b967310>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964130>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964130>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b9423a0>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b9423a0>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382ba3aa60>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382ba3aa60>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b942400>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b942400>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
Exception in callback TaskManager._clean_task(<seamless.cor...x7f382b964700>)(<Task finishe...No response')>)
handle: <Handle TaskManager._clean_task(<seamless.cor...x7f382b964700>)(<Task finishe...No response')>)>
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/seamless/seamless/core/manager/taskmanager.py", line 597, in _clean_task
    task.future.result() # to raise Exception; TODO: log it instead
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/structured_cell.py", line 351, in _run
    buffer = await GetBufferTask(manager, checksum).run()
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 137, in run
    await asyncio.shield(self.future)
  File "/seamless/seamless/core/manager/tasks/__init__.py", line 170, in _run0
    return await self._runner
  File "/seamless/seamless/core/manager/tasks/get_buffer.py", line 22, in _run
    result = await cachemanager.fingertip(checksum)
  File "/seamless/seamless/core/manager/cachemanager.py", line 251, in fingertip
    return await self._fingertip(checksum, must_have_cell=must_have_cell, done=set())
  File "/seamless/seamless/core/manager/cachemanager.py", line 264, in _fingertip
    buffer = get_buffer(checksum, remote=True)
  File "/seamless/seamless/core/protocol/get_buffer.py", line 115, in get_buffer
    buffer = buffer_cache.get_buffer(checksum, remote=remote, deep=deep)
  File "/seamless/seamless/core/cache/buffer_cache.py", line 281, in get_buffer
    buffer = database_cache.get_buffer(checksum)
  File "/seamless/seamless/core/cache/database_client.py", line 188, in get_buffer
    response = self.send_request(request)
  File "/seamless/seamless/core/cache/database_client.py", line 159, in send_request
    raise Exception(response.text)
Exception: ERROR: No response
7916576ad7f9a29fe458dfc70e50bf09  twopi-colored-jobmaster.seamless
