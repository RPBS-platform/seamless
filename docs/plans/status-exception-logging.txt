Status/exception/logging
========================

UPDATE 0.3
Status and exception are computed properties, that can be interrogated using polling observers.
In the future, secondary outputs (stdout/stderr and cell.status/cell.exception, and get_graph?) will be "second-rate cells", in the sense that they can be connected only to (normal) cells in *other* contexts.

On the longer term, do the same for progress, and for execution time
 as well.

In addition, there should be an easy util to monitor the stdout/stderr/exception,
 dumping them into the terminal printing function.
This monitor should take into account the last printed value.
If there is a cache hit, it should print out the corresponding last printed value.
If that value cannot be found, a monitored transformer should then be fingertipped
(i.e. re-computed).
Monitoring should not be saved in the graph; in fact, it should end upon translation
(printing a message)

All of this will replace the Logging and Report cells mentioned in earlier plans.
/UPDATE

TODO (long term)

Finalize exception logging. There are still the core aux systems
(mount, share, communion), link them to cells if possible. For the rest,
 there are still translation/highlevel API exceptions, but they should be printed.
 Did we forget anything?

Exceptions and state should never be real cells, as they are not deterministic.
But in the future, perhaps support connecting them to a cell from a *different* graph...
