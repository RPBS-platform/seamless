UPDATE: initial Module implementation for interpreted Python modules

At the low-level, a module is just a plain cell that contains a dictionary.
This cell is connected directory to a worker pin of celltype "module", which
 instructs the worker to build internallt a low-level module object
 out of the cell.

A high-level Module class is necessary that wraps around this plain cell.
It should check that the mode, language and code are set.
See core/build_module.py:build_interpreted_module
"code" should be pull-sourcable, just as the code of a Transformer is.
At a later point, also support compiled modules.
