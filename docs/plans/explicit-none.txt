Dealing properly with explicit None values
==========================================

Allow simple cells to have an support_explicit_none flag.
If so:
- They can be set to explicit none with cell.set_explicit_none().
  This sets the value to Seamless.ExplicitNone.
  Setting the cell to a normal None means cancellation, as usual.
- Connections between two explicit-None-supporting cells carry Seamless.ExplicitNone.
- Connection between two simple cells of which only one supports explicit None leads to a normal None and cancellation.
- Connection of an outchannel to an explicit-None-supporting cell sets the cell to ExplicitNone if the outchannel is None.
  In other words, structured cells are explicit-None-supporting as far as downstream connections are considered.
- All downstream connections of a void cell or worker remain void.
  Structured cells remain void if their auth is None and all of their inchannels are void.

Allow any worker inputpin to be annotated as support_explicit_none
These inputpins must be connected from explicit-None-supporting cells.
If the upstream cell is Seamless.ExplicitNone, a normal None is fed into the worker namespace.

It remains illegal for a transformer to return None.
A None set by a reactor remains a normal None. To avoid confusion, editpins and reactor outputpins cannot be connected to explicit-None-supporting cells.
