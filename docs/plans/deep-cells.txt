C. Deep cells DONE
(In parallel, implement/extend the expression evaluation engine)
As long as they are of cell type "mixed", a cell can be annotated with a *hash pattern*.
A hash pattern describes how the value of the cell is stored as checksums.
A hash pattern is either the symbol "#" ("hash", i.e. "checksum") or a dict.
The default hash pattern (i.e a non-deep cell) is "#" (value stored as a single checksum).
For a hash pattern that is a dict, the values are themselves hash patterns (sub-patterns). 
The dict can have the following keys: 
- A string S. This means that at this level, the value must be a dict containing string keys,
normally including S. The value being a non-dict will be a parse error. The item S in the value
will be stored using the specified hash sub-pattern.
- * . Same as above, except that it will match any item in the value dict, 
not just a single item S. This pattern has lower priority (i.e. it will not match S if there is a
specific hash pattern for S). If there is no *, the value dict may not contain other keys than
the strings S that have been specified. Even is there is a *, the items must all be strings.
- ? . Must be the only entry in the hash pattern.
This means that at this level, the value must be a list. Every item in the list will be 
stored using the specified hash sub-pattern. 
- ?N . N must be a number. Must be the only entry in the hash pattern.
This means that at this level, the value must be a list. 
The list will be divided into chunks of length N (the last chunk may be smaller).
Every item in the list will be stored using the specified hash sub-pattern.

How the checksums are stored exactly:

Non-deep cells are always stored as checksum (in binary format) of a buffer. They hold
a checksum reference to that buffer.
Deep cells have an underlying deep structure. They are stored as a checksum 
(in binary format) of the buffer of that deep structure. They hold a checksum reference 
to this buffer. The deep structure contains checksums in hex format. 
It holds a reference to (the underlying buffer of) every checksum in it.
Deep structures use the expression evaluation engine to modify their values (each value
is associated with a deep subpath).
To convert their values to checksums, they use a set-deep-value task, similar to a set
value task, except that it does not depend on a cell; rather, it is cancelled when the
same deep subpath is modified.
Internally, the deep structure is stored as follows.
- If the hash pattern contains * and/or string keys, the deep structure is a dict with the same
  keys as the corresponding value dict.
- If the hash pattern contains ?, the deep structure is a list with the same length as the
  corresponding value list.
- If the hash pattern contains ?N, the deep structure is a list of two items. Item 1
  contains the length of the original value list, and item 2 is a list with one hex checksum
  (or deep sub-structure) for each chunk.
